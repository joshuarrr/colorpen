import React, { Component } from 'react';
import _ from 'lodash';
import cs from 'classnames';
import DropdownList from 'react-widgets/lib/DropdownList';

const collections = [{
	name: 'SVG Colors',
	id: 'svgColors'
}, {
	name: 'X11 Colors',
	id: 'x11Colors'
}, {
	name: 'HTML Colors',
	id: 'htmlColors'
}, {
	name: 'CSS Colors',
	id: 'cssColors'
}];

export class Header extends Component {
	static propTypes = {
		callbackParent:	React.PropTypes.any,
		options: React.PropTypes.bool,
		onChange: React.PropTypes.func
	}

	constructor(props) {
		super(props);
		const first = collections[0];

		this.state = {
			value: first.name
		};
	}

	componentDidUpdate = (prevProps, prevState) => {
		const newValue = this.state.value;

		return (
			this.props.callbackParent(newValue)
		);
	}

	changeHandler = (e) => {
		let toggledOpt = this.props.options;

		if (typeof this.props.onChange === 'function') {
			toggledOpt = !toggledOpt;
			/*
			console.log(
				'\n'
				+ '— header.jsx (changeHandler)'
				+ '\n * '
				+ 'Hover detected!'
				+ '\n * '
				+ 'toggledOpt: ' + toggledOpt + '\n\n'
			);
			/* */
			this.props.onChange(toggledOpt);
		}
	}

	render = () => {
		/*
		console.log(
			'\n'
			+ '— header.jsx (render)'
			+ '\n * '
			+ 'props.options: '
			+ this.props.options + '\n\n'
		);
		/* */

		const colorSets = collections.map(function gc(collection) {
			return (
				collection.name
				);
		});

		const gearIcon = `
			<svg class="gear-icon" viewBox="0 0 30 30">
				<path d="M13.689,29.987 C13.443,29.987 13.228,29.819 13.168,29.581 L12.242,25.878 C11.521,25.655 10.81,25.353 10.123,24.98 L6.83,26.957 C6.619,27.084 6.348,27.049 6.174,26.877 L3.615,24.318 C3.441,24.144 3.408,23.873 3.535,23.662 L5.512,20.373 C5.145,19.693 4.85,18.984 4.631,18.256 L0.908,17.324 C0.67,17.265 0.5,17.049 0.5,16.804 L0.5,13.189 C0.5,12.941 0.67,12.726 0.908,12.668 L4.609,11.744 C4.836,11.015 5.138,10.305 5.509,9.621 L3.532,6.328 C3.405,6.115 3.438,5.844 3.612,5.67 L6.167,3.115 C6.343,2.939 6.614,2.904 6.825,3.035 L10.118,5.01 C10.796,4.647 11.505,4.35 12.233,4.131 L13.163,0.408 C13.224,0.168 13.438,0 13.684,0 L17.299,0 C17.545,0 17.762,0.168 17.82,0.408 L18.746,4.113 C19.473,4.34 20.184,4.64 20.863,5.008 L24.16,3.029 C24.367,2.908 24.64,2.939 24.816,3.111 L27.371,5.666 C27.547,5.84 27.58,6.111 27.453,6.324 L25.476,9.621 C25.839,10.297 26.134,11.006 26.353,11.73 L30.08,12.664 C30.32,12.723 30.488,12.939 30.488,13.185 L30.488,16.796 C30.488,17.042 30.32,17.259 30.08,17.317 L26.353,18.251 C26.134,18.981 25.839,19.69 25.478,20.362 L27.457,23.657 C27.584,23.87 27.551,24.141 27.375,24.315 L24.82,26.874 C24.644,27.048 24.373,27.077 24.164,26.956 L20.867,24.977 C20.187,25.348 19.476,25.647 18.748,25.875 L17.826,29.578 C17.765,29.816 17.551,29.984 17.303,29.984 L13.689,29.987 L13.689,29.987 Z M10.113,23.819 C10.205,23.819 10.299,23.842 10.383,23.891 C11.172,24.346 11.998,24.696 12.836,24.928 C13.022,24.981 13.164,25.131 13.213,25.319 L14.111,28.911 L16.884,28.909 L17.78,25.315 C17.827,25.129 17.969,24.981 18.155,24.928 C19.005,24.69 19.829,24.34 20.608,23.889 C20.778,23.789 20.985,23.793 21.153,23.893 L24.356,25.817 L26.319,23.85 L24.395,20.651 C24.293,20.483 24.293,20.274 24.389,20.104 C24.832,19.336 25.172,18.518 25.403,17.665 C25.454,17.477 25.602,17.331 25.792,17.284 L29.413,16.376 L29.413,13.605 L25.792,12.699 C25.603,12.652 25.454,12.506 25.403,12.318 C25.174,11.472 24.833,10.65 24.389,9.877 C24.293,9.709 24.295,9.5 24.395,9.332 L26.315,6.131 L24.354,4.17 L21.151,6.092 C20.985,6.194 20.778,6.197 20.606,6.096 C19.825,5.647 19.001,5.297 18.153,5.059 C17.967,5.008 17.825,4.86 17.778,4.672 L16.88,1.076 L14.107,1.076 L13.203,4.693 C13.156,4.881 13.01,5.031 12.822,5.082 C11.972,5.312 11.15,5.654 10.377,6.098 C10.209,6.198 10.002,6.196 9.832,6.092 L6.633,4.172 L4.672,6.135 L6.592,9.332 C6.694,9.5 6.694,9.709 6.596,9.879 C6.145,10.664 5.793,11.49 5.557,12.336 C5.504,12.524 5.356,12.666 5.168,12.713 L1.576,13.609 L1.576,16.382 L5.193,17.288 C5.382,17.335 5.531,17.481 5.582,17.669 C5.812,18.517 6.152,19.339 6.6,20.112 C6.698,20.282 6.696,20.491 6.594,20.659 L4.674,23.854 L6.637,25.819 L9.836,23.897 C9.922,23.845 10.018,23.819 10.113,23.819 L10.113,23.819 Z M15.498,11.917 C13.801,11.917 12.422,13.298 12.422,14.993 C12.422,16.688 13.801,18.069 15.498,18.069 C17.191,18.069 18.57,16.688 18.57,14.993 C18.57,13.298 17.191,11.917 15.498,11.917 L15.498,11.917 Z M15.498,19.146 C13.209,19.146 11.346,17.285 11.346,14.994 C11.346,12.703 13.209,10.842 15.498,10.842 C17.785,10.842 19.646,12.703 19.646,14.994 C19.646,17.285 17.785,19.146 15.498,19.146 L15.498,19.146 Z"></path>
			</svg>
		`;

		return (
			<header className={ 'site-header' }>
			<h1 className="site-title">
				Colorpen
			</h1>
			<DropdownList
				data={ colorSets }
				value={ this.state.value }
				onChange={
					value => this.setState({ value })
				}
			/>
			<div
				className={ 'options-toggle ' }
				dangerouslySetInnerHTML={
					{ __html: gearIcon }
				}
				options={ this.props.options }
				onClick={ this.changeHandler }
			/>
			</header>
		);
	}
}
